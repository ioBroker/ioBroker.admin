# This is a composition of lint and test scripts
# Make sure to update this file along with the others

name: Test and Release

# Run this job on all pushes and pull requests
# as well as tags with a semantic version
on:
    push:
        branches:
            - master
        tags:
            # normal versions
            - 'v?[0-9]+.[0-9]+.[0-9]+'
            # pre-releases
            - 'v?[0-9]+.[0-9]+.[0-9]+-**'
    pull_request: {}

# Cancel previous PR/branch runs when a new commit is pushed
concurrency:
    group: ${{ github.ref }}
    cancel-in-progress: true

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                  node-version: 20.x

            - name: 'Install'
              run: |
                  npm i -f

            - name: 'Install Adapter'
              run: npm i -w packages/admin -f

            - name: 'Install FE'
              run: |
                  cd packages/admin/src-admin
                  npm i -f

            - name: 'Lint Backend'
              run: npm run lint-backend -w packages/admin

            - name: 'Build backend'
              run: npm run build:backend -w packages/admin

            - name: 'Build adapter-react-v5'
              run: npm run build -w packages/adapter-react-v5

            - name: 'Build JsonConfig'
              run: npm run build -w packages/jsonConfig

            - name: 'Build dm-gui-components'
              run: npm run build -w packages/dm-gui-components

            - name: Check TypeScript files
              run: |
                  cd packages/admin/src-admin
                  npm run check-ts
              # Wait till js-controller 7 types are available
              continue-on-error: true

            - name: 'Build'
              run: |
                  npm run clean
                  NODE_OPTIONS=--max_old_space_size=4096 npm run build

    # Runs adapter tests on all supported node versions and OSes
    adapter-tests:
        if: contains(github.event.head_commit.message, '[skip ci]') == false

        needs: [build]

        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                node-version: [18.x, 20.x, 22.4.1]
                os: [ubuntu-latest, windows-latest, macos-latest]

        steps:
            - uses: actions/checkout@v4
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Install Dependencies
              run: npm i -f

            - name: 'Build backend'
              run: npm run build:backend -w packages/admin

            - name: Run local tests
              run: npm test -w packages/admin/

    adapter-tests-gui:
        if: contains(github.event.head_commit.message, '[skip ci]') == false

        needs: [build]

        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4
            - name: Use Node.js 20.x
              uses: actions/setup-node@v4
              with:
                  node-version: 20.x

            - name: Install Dependencies
              run: npm run install-monorepo

            - name: 'Build backend'
              run: npm run build:backend -w packages/admin

            - name: Build
              run: NODE_OPTIONS=--max_old_space_size=8192 npm run build

            - name: Run GUI tests
              run: npm run test:gui -w packages/admin/

            - name: Archive screenshots
              if: always()
              # if: failure()
              uses: actions/upload-artifact@v4
              with:
                  path: packages/admin/tmp/screenshots/**/*.png
                  retention-days: 3

    auto-merge:
        if: |
            always() &&
            github.event_name == 'pull_request'
        needs: [adapter-tests-gui]
        runs-on: macos-latest # ubuntu-latest has too few RAM

        steps:
            - id: automerge
              name: automerge
              uses: 'pascalgn/automerge-action@v0.16.4'
              env:
                  GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
                  MERGE_LABELS: 'automated pr ðŸ”§'
                  MERGE_FILTER_AUTHOR: 'foxriver76'
                  MERGE_FORKS: 'false'
                  MERGE_DELETE_BRANCH: 'false'
                  UPDATE_LABELS: 'automated pr ðŸ”§'
                  MERGE_METHOD: 'squash'
                  MERGE_COMMIT_MESSAGE: 'pull-request-title-and-description'

            - name: Checkout repository
              if: steps.automerge.outputs.mergeResult == 'merged'
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0 # Fetch the history, or this action won't work
                  ref: 'master'

            - name: Use Node.js 20
              if: steps.automerge.outputs.mergeResult == 'merged'
              uses: actions/setup-node@v4
              with:
                  node-version: 20

            - name: Determine version
              if: steps.automerge.outputs.mergeResult == 'merged'
              id: version
              uses: actions/github-script@v7
              with:
                  result-encoding: string
                  script: |
                    return require('./lerna.json').version;

            - name: Extract the commit body
              if: steps.automerge.outputs.mergeResult == 'merged'
              id: extract_release
              # The body may be multiline, therefore we need to escape some characters
              run: |
                  BODY=$(git show -s --format=%b)
                  BODY="${BODY//'%'/'%25'}"
                  BODY="${BODY//$'\n'/'%0A'}"
                  BODY="${BODY//$'\r'/'%0D'}"
                  echo "::set-output name=BODY::$BODY"

            - name: Install Dependencies
              if: steps.automerge.outputs.mergeResult == 'merged'
              run: npm run install-monorepo

            - name: 'Build backend'
              if: steps.automerge.outputs.mergeResult == 'merged'
              run: npm run build:backend -w packages/admin

            - name: Publish package to npm
              if: steps.automerge.outputs.mergeResult == 'merged'
              run: |
                  npm config set //registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}
                  npm whoami
                  git checkout -- package-lock.json
                  npx lerna publish from-package --yes

            - name: Create Github Release
              if: steps.automerge.outputs.mergeResult == 'merged'
              uses: ncipollo/release-action@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag: v${{ steps.version.outputs.result }}
                  name: Release v${{ steps.version.outputs.result }}
                  draft: false
                  prerelease: ${{ contains(steps.version.outputs.result, '-') }}
                  body: ${{ steps.extract_release.outputs.BODY }}

            - name: Notify Sentry.io about the release
              if: steps.automerge.outputs.mergeResult == 'merged'
              run: |
                  cd packages/admin
                  npm i -g @sentry/cli
                  export SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}
                  export SENTRY_URL=https://sentry.iobroker.net
                  export SENTRY_ORG=iobroker
                  export SENTRY_PROJECT=iobroker-admin
                  export SENTRY_VERSION=iobroker.admin@${{ steps.version.outputs.result }}
                  export SENTRY_RELEASE=${{ steps.version.outputs.result }}
                  sentry-cli releases new $SENTRY_VERSION
                  sentry-cli releases finalize $SENTRY_VERSION
                  sentry-cli sourcemaps inject ./adminWww
                  sentry-cli sourcemaps upload ./adminWww

              # Add the following line BEFORE finalize if repositories are connected in Sentry
              # sentry-cli releases set-commits $SENTRY_VERSION --auto

              # Add the following line BEFORE finalize if sourcemap uploads are needed
              # sentry-cli releases files $SENTRY_VERSION upload-sourcemaps build/
